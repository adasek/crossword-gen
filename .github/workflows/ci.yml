name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-test:
    name: Lint, Type Check, and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-python-poetry

      - name: Run isort
        run: poetry run python3 -m isort --check .

      - name: Run pylint
        run: |
          poetry run pylint config crossword --output-format=json > pylint-report.json || true
          python .github/scripts/annotate_pylint.py

      - name: Run mypy
        if: always()
        run: |
          echo [ > mypy-report.json
          poetry run mypy --output=json config crossword | sed -e '$! s/$/,/' >> mypy-report.json || true
          echo ] >> mypy-report.json
          python .github/scripts/annotate_mypy.py

      - name: Run Tests
        if: always()
        run: ./bin/test

      - name: Upload pytest results (if structured output added later)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: .pytest_cache/

  benchmark:
    name: Performance Benchmark
    runs-on: ubuntu-latest
    if: always()

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-python-poetry

      - name: Run performance benchmark
        run: poetry run python3 -m benchmark.benchmark

  benchmark-comment:
    name: Comment benchmark on PR
    uses: peter-evans/create-or-update-comment@v4
    with:
      issue-number: ${{ github.event.pull_request.number }}
      body: |
        ðŸ§ª **Benchmark Results**
        - ðŸ§  Solved Time: `${{ steps.benchmark.outputs.solved_time }}s`
        - ðŸ“Š Average Score: `${{ steps.benchmark.outputs.avg_score }}`
        - ðŸš« Unsolvable Time: `${{ steps.benchmark.outputs.unsolvable_time }}s`
